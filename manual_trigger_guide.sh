#!/bin/bash

echo "🔄 GitHub Actions 工作流手动触发指南"
echo "====================================="
echo "时间: $(date)"
echo ""

echo "✅ 工作流已优化完成:"
echo "1. ✅ 修复artifact命名问题"
echo "2. ✅ 修复download-artifact配置"
echo "3. ✅ 添加调试文件列表步骤"
echo "4. ✅ 修复PyPI上传路径"
echo "5. ✅ 改进工作流可靠性"
echo ""

echo "🎯 手动触发步骤:"
echo "1. 访问工作流页面:"
echo "   https://github.com/miaokela/query-builder/actions/workflows/build.yml"
echo ""
echo "2. 点击 'Run workflow' 按钮"
echo "   (在页面右侧的蓝色按钮)"
echo ""
echo "3. 确认触发设置:"
echo "   • Branch: main (默认)"
echo "   • 点击绿色 'Run workflow' 确认"
echo ""

echo "📊 这次触发的优势:"
echo "• 使用最新的修复配置"
echo "• 不创建新标签，保持版本一致性"
echo "• 手动控制触发时机"
echo "• 可以多次重试而不污染版本历史"
echo ""

echo "🎯 预期执行流程:"
echo "1. Build Jobs (3个平台并行):"
echo "   • ubuntu-20.04 构建 Linux wheels"
echo "   • windows-2019 构建 Windows wheels"
echo "   • macos-11 构建 macOS wheels"
echo ""
echo "2. 注意: Publish Job不会执行"
echo "   • 因为这不是标签推送"
echo "   • 只会构建和上传artifacts"
echo "   • 可以下载测试wheel文件"
echo ""

echo "🔍 监控要点:"
echo "• 查看所有3个build job状态"
echo "• 检查artifacts是否正确上传"
echo "• 确认wheel文件命名正确"
echo "• 验证无红色错误"
echo ""

echo "🎊 如果build成功:"
echo "1. 下载artifacts验证wheel文件"
echo "2. 可以手动测试安装"
echo "3. 确认无问题后可推送标签触发PyPI发布"
echo ""

echo "💡 下一步选择:"
echo "A. 手动触发测试 (推荐):"
echo "   → 验证构建无问题"
echo "   → 然后推送新标签发布到PyPI"
echo ""
echo "B. 直接使用现有标签v0.1.4:"
echo "   → 如果确信工作流修复正确"
echo "   → 标签已存在，会自动触发完整发布"
echo ""

echo "📱 建议操作:"
echo "1. 先手动触发测试build"
echo "2. 验证artifacts正确"
echo "3. 然后决定是否发布到PyPI"